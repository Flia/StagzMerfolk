<?xml version="1.0" encoding="utf-8"?>
<Defs>
    <AbilityDef>
        <defName>Stagz_SirenCall</defName>
        <label>siren song</label>
<!--        TODO: finish desc-->
        <description>With a powerful bellow and psychic connection, call an animal to fight your enemies for a few hours.</description>
        <iconPath>UI/Abilities/SirenCall</iconPath>
        <targetRequired>False</targetRequired>
        <cooldownTicksRange>300000</cooldownTicksRange><!-- 5 days -->
        <canUseAoeToGetTargets>false</canUseAoeToGetTargets>
        <jobDef>CastAbilityOnThingWithoutWeaponInterruptible</jobDef>
        <groupAbility>true</groupAbility>
        <statBases>
            <Ability_Duration>500</Ability_Duration>
            <Ability_EffectRadius>49.9</Ability_EffectRadius>
        </statBases>
        <verbProperties>
            <verbClass>Verb_CastAbility</verbClass>
            <label>siren song</label>
            <warmupTime>3</warmupTime>
            <range>-1</range>
            <drawAimPie>true</drawAimPie>
            <requireLineOfSight>false</requireLineOfSight>
            <warmupEffecter>Stagz_SirenCall_Warmup</warmupEffecter>
            <targetParams>
                <canTargetSelf>True</canTargetSelf>
                <canTargetPawns>false</canTargetPawns>
                <canTargetBuildings>false</canTargetBuildings>
                <canTargetAnimals>false</canTargetAnimals>
                <canTargetHumans>false</canTargetHumans>
                <canTargetMechs>false</canTargetMechs>
            </targetParams>
        </verbProperties>
        <comps>
            <li Class="StagzMerfolk.CompAbility.CompProperties_AbilityGiveMentalStateInArea">
                <compClass>StagzMerfolk.CompAbility.CompAbilityEffect_GiveMentalStateInArea</compClass>
                <casterEffect>AnimalWarcall_Cast</casterEffect>
                <!-- <targetEffect>AnimalWarcall_CastOnTarget</targetEffect> -->
                <mentalState>BerserkWarcall</mentalState>
            </li>
        </comps>
    </AbilityDef>
    
    <!-- <ThingDef ParentName="MoteBase"> -->
    <!--     <defName>Mote_AnimalWarcallTarget</defName> -->
    <!--     <thingClass>MoteAttached</thingClass> -->
    <!--     <altitudeLayer>MoteOverhead</altitudeLayer> -->
    <!--     <mote> -->
    <!--         <fadeInTime>0.1</fadeInTime> -->
    <!--         <fadeOutTime>0.3</fadeOutTime> -->
    <!--         <solidTime>0.3</solidTime> -->
    <!--         <growthRate>2</growthRate> -->
    <!--     </mote> -->
    <!--     <graphicData> -->
    <!--         <graphicClass>Graphic_MoteWithAgeSecs</graphicClass> -->
    <!--         <shaderType>MotePsychicWarmupNeuroquake</shaderType> -->
    <!--         <texPath>Things/Mote/MoteHellfireCannon_HeatWaveDistortion</texPath> -->
    <!--         <shaderParameters> -->
    <!--             <_distortionIntensity>0.5</_distortionIntensity> -->
    <!--             <_brightnessMultiplier>1.3</_brightnessMultiplier> -->
    <!--             <_distortionTint>(0.35, 0, 0, 0)</_distortionTint> -->
    <!--             <_pulseSpeed>1</_pulseSpeed> -->
    <!--         </shaderParameters> -->
    <!--         <drawSize>2</drawSize> -->
    <!--     </graphicData> -->
    <!-- </ThingDef> -->
    
    <AbilityDef ParentName="AbilityTouchBase">
        <defName>Stagz_CallRain</defName>
        <label>call rain</label>
        <!--        TODO: finish desc-->
        <description>call rain.</description>
        <iconPath>UI/Abilities/Raincalling</iconPath>
        <targetRequired>False</targetRequired>
        <cooldownTicksRange>900000</cooldownTicksRange>
        <verbProperties>
            <verbClass>Verb_CastAbility</verbClass>
            <warmupTime>5</warmupTime>
            <range>-1</range>
            <targetParams>
                <canTargetSelf>True</canTargetSelf>
                <canTargetPawns>false</canTargetPawns>
                <canTargetBuildings>false</canTargetBuildings>
                <canTargetAnimals>false</canTargetAnimals>
                <canTargetHumans>false</canTargetHumans>
                <canTargetMechs>false</canTargetMechs>
            </targetParams>
        </verbProperties>
        <comps>
            <li Class="StagzMerfolk.CompAbility.CompProperties_AbilityCallWeather">
                <compClass>StagzMerfolk.CompAbility.CompAbilityEffect_CallWeather</compClass>
                <casterEffect>AnimalWarcall_Cast</casterEffect>
                <weatherDef>RainyThunderstorm</weatherDef>
                <weatherDuration>900000</weatherDuration>
            </li>
        </comps>
    </AbilityDef>
    
    <AbilityDef>
        <defName>Stagz_DeepDive</defName>
        <label>deep dive</label>
        <!-- TODO: finalize desc -->
        <description>TODO</description>
        <iconPath>UI/Abilities/DeepDive</iconPath>
        <cooldownTicksRange>60</cooldownTicksRange>
        <hostile>false</hostile>
        <targetRequired>False</targetRequired>
        <verbProperties>
            <verbClass>Verb_CastAbility</verbClass>
            <warmupTime>1</warmupTime>
            <range>-1</range>
            <targetParams>
                <canTargetSelf>True</canTargetSelf>
                <canTargetPawns>false</canTargetPawns>
                <canTargetBuildings>false</canTargetBuildings>
                <canTargetAnimals>false</canTargetAnimals>
                <canTargetHumans>false</canTargetHumans>
                <canTargetMechs>false</canTargetMechs>
            </targetParams>
        </verbProperties>
        <comps>
            <li Class="CompProperties_AbilityEffect">
                <compClass>StagzMerfolk.CompAbility.CompAbility_RequiresOnWater</compClass>
            </li>
            <li Class="CompProperties_AbilityGiveHediff">
                <compClass>CompAbilityEffect_GiveHediff</compClass>
                <onlyApplyToSelf>True</onlyApplyToSelf>
                <hediffDef>Stagz_DeepDiving</hediffDef>
                <psychic>False</psychic>
            </li>
        </comps>
    </AbilityDef>
    <HediffDef>
        <defName>Stagz_DeepDiving</defName>
        <label>deep diving</label>
        <!-- TODO: finalize desc -->
        <description>TODO.</description>
        <hediffClass>HediffWithComps</hediffClass>
        <isBad>false</isBad>
        <comps>
            <li Class="HediffCompProperties">
                <compClass>HediffComp_Invisibility</compClass>
            </li>
            <li Class="StagzMerfolk.CompAbility.HediffCompProperties_DisappearsOnLeavingWater"/>
            <li Class="HediffCompProperties_DisappearsOnDeath"/>
        </comps>
    </HediffDef>
</Defs>
